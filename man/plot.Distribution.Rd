% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot.Distribution}
\alias{plot.Distribution}
\title{Draw Distribution Plots}
\usage{
## S3 method for class "Distribution"
  plot(x, fun=c('pdf','cdf'), npoints = 3000, plot = TRUE, ask = FALSE,
  arrange = TRUE, ...)
}
\arguments{
\item{x}{A distribution object.}

\item{fun}{A list of plottable functions, either one or more of "pdf","cdf","quantile", "survival", "hazard" and "cumhazard".}

\item{npoints}{number of evaluation points.}

\item{plot}{logical; if TRUE, figures are shown in the plot window; if FALSE, a table containing relevant amounts is returned.}

\item{ask}{logical; if TRUE, the user is asked before each plot, see arguement in \code{\link[graphics]{par}}.}

\item{arrange}{logical; if TRUE, layout is adjusted when producing multiple plots.}

\item{...}{graphical parameters to be passed through to plotting methods, see \code{\link[graphics]{par}}.}
}
\description{
There are currently six figures available for any univariate continuous
  or discerte distribution: pdf/pmf, cdf, quantile, survival, hazard and cumulative
  hazard. By default, the first two are produced.
}
\details{
The evaluation points are generated via inverse transform sampling method
  (see \url{https://en.wikipedia.org/wiki/Inverse_transform_sampling}).
  By default, 3000 points are produced for each distributions and the relevant
  amounts (pdf, cdf, etc.) are calculated. When \emph{arrange = TRUE} and there are
   more than one figures, figures are allocated via \code{\link[graphics]{layout}}. Users
  can also customise the layout by setting \emph{arrange = FALSE} then through
  \code{\link[graphics]{par}}. Notice that additional plotting parameters will pass
   through all the plottable functions. If users wish to change only one of the
   figures, a solution is to plot this figure separately, then integrate with
    other figures onto the same device throughout \emph{mfrow} in \code{\link[graphics]{par}} or \code{\link[graphics]{layout}}.
}
\examples{
normal <- Normal$new()
plot(normal, fun = c("pdf", "cdf", "quantile", "survival", "hazard", "cumhazard"))

}
\seealso{
\code{\link{lines.Distribution}} for adding a new distribution plot superimposed on an existing one
}
